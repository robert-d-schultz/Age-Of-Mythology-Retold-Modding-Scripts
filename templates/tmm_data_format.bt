
string SomeFunc255( float f )
{
    float foo = (f) / 255;
    string s;
    return SPrintf(s, "%.3f", foo);
}
string SomeFunc127( float f )
{
    float foo = (f) / 127;
    string s;
    return SPrintf(s, "%.3f", foo);
}
string SomeFunc63( float f )
{
    float foo = (f) / 63;
    string s;
    return SPrintf(s, "%.3f", foo);
}

string SomeFunc1024( float f )
{
    float foo = ((f) / 1024) * (1/Sqrt(2));
    string s;
    return SPrintf(s, "%.3f", foo);
}

typedef struct {
    //You'd know these values from the .tmm file    
    local int vertex_count = 1160;
    local int triangle_count = 2970;
    
    //Vertices
    typedef struct {
        hfloat x;
        hfloat y;
        hfloat z;
        hfloat u;
        hfloat v;
                
        //byte bitan1<comment=SomeFunc255>;
        //byte bitan2<comment=SomeFunc255>;
        //byte norm1<comment=SomeFunc255>;
        //byte norm2<comment=SomeFunc255>;
        //byte tan1<comment=SomeFunc255>;
        //byte tan2<comment=SomeFunc255>;
        
        //uint64 norm1 : 10<comment=SomeFunc1024>;
        //uint64 norm2 : 10<comment=SomeFunc1024>;
        //uint64 norm3 : 4;
        //uint64 tan1 : 10<comment=SomeFunc1024>;
        //uint64 tan2 : 10<comment=SomeFunc1024>;
        //uint64 tan3 : 4;
        
        //6*8=48
        uint16 bitan1 : 6<comment=SomeFunc63>;
        uint16 bitan1_ : 1;
        uint16 bitan2 : 6<comment=SomeFunc63>;
        uint16 bitan2_ : 1;
        uint16 bitan3: 2;
        
        uint16 norm1 : 6<comment=SomeFunc63>;
        uint16 norm1_ : 1;
        uint16 norm2 : 6<comment=SomeFunc63>;
        uint16 norm2_ : 1;
        uint16 norm3: 2;
        
        uint16 tan1 : 6<comment=SomeFunc63>;
        uint16 tan1_ : 1;
        uint16 tan2 : 6<comment=SomeFunc63>;
        uint16 tan2_ : 1;
        uint16 tan3: 2;
    } Vertex;
    Vertex vertices[vertex_count];
    
    
    //Triangles
    typedef struct {
        uint16 vert1;
        uint16 vert2;
        uint16 vert3;
    } Triangle;
    Triangle triangles[triangle_count];
    
    
    //Bone weights? Maximum of 4 bones per vertex?
    typedef struct {
        ubyte weights[4];
        ubyte bone_ids[4];
    } BoneThing;
    BoneThing bone_things[vertex_count];
    
        
    //Vertex height ie. y value?
    typedef struct {
        hfloat vert_height;
    } OtherThing;
    OtherThing otherthings[vertex_count];
    
} TMM;

TMM tmm;